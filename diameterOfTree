Given a Binary Tree A consisting of N integer nodes, you need to find the diameter of the tree.

The diameter of a tree is the number of edges on the longest path between two nodes in the tree.


import sys
sys.setrecursionlimit(999999999)
# Definition for a  binary tree node
# class TreeNode:
#    def __init__(self, x):
#        self.val = x
#        self.left = None
#        self.right = None

class Solution:
    # @param A : root node of tree
    # @return an integer    
     def diaHelper(self, root):
        if root == None:
            return (0, 0)
        else:
            leftHeightAndDia = self.diaHelper(root.left)
            rightHeightAndDia = self.diaHelper(root.right)
            leftHeight = leftHeightAndDia[0]
            rightHeight = rightHeightAndDia[0]
            leftDia = leftHeightAndDia[1]
            rightDia = rightHeightAndDia[1]
            return (1+ max(leftHeight, rightHeight), max(leftDia, rightDia, leftHeight+ rightHeight))
            
    def diameterOfBinaryTree(self, root: TreeNode) -> int:
        return self.diaHelper(root)[1]]
        
